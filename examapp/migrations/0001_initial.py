# Generated by Django 5.2.1 on 2025-05-20 14:58

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ExamType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Ibivanze', max_length=500)),
                ('order', models.IntegerField(default=5)),
            ],
        ),
        migrations.CreateModel(
            name='RoadSign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sign_image', models.ImageField(upload_to='road_signs/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'png', 'jpeg'])])),
                ('definition', models.CharField(max_length=100, unique=True)),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('date_updated', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SignType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('name', models.CharField(max_length=25, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, default=None, max_length=15, null=True, unique=True)),
                ('profile_picture', models.ImageField(blank=True, default='images/avatar.png', null=True, upload_to='images/')),
                ('date_joined', models.DateTimeField(auto_now_add=True)),
                ('otp_code', models.CharField(blank=True, max_length=6, null=True)),
                ('otp_verified', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'All Accounts',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.TextField(verbose_name='Question Text')),
                ('choice1_text', models.CharField(blank=True, max_length=700, verbose_name='Choice 1 Text')),
                ('choice2_text', models.CharField(blank=True, max_length=500, verbose_name='Choice 2 Text')),
                ('choice3_text', models.CharField(blank=True, max_length=255, verbose_name='Choice 3 Text')),
                ('choice4_text', models.CharField(blank=True, max_length=255, verbose_name='Choice 4 Text')),
                ('correct_choice', models.PositiveSmallIntegerField(choices=[(1, 'Choice 1'), (2, 'Choice 2'), (3, 'Choice 3'), (4, 'Choice 4')], verbose_name='Correct Choice Number')),
                ('order', models.PositiveIntegerField(default=1, unique=True, verbose_name='Display Order')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('question_type', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='examapp.examtype', verbose_name='Question Type')),
                ('choice1_sign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='choice1_questions', to='examapp.roadsign', verbose_name='Choice 1 Sign')),
                ('choice2_sign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='choice2_questions', to='examapp.roadsign', verbose_name='Choice 2 Sign')),
                ('choice3_sign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='choice3_questions', to='examapp.roadsign', verbose_name='Choice 3 Sign')),
                ('choice4_sign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='choice4_questions', to='examapp.roadsign', verbose_name='Choice 4 Sign')),
                ('question_sign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='questions', to='examapp.roadsign', verbose_name='Question Image')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['order'],
            },
        ),
        migrations.CreateModel(
            name='Exam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('schedule_hour', models.TimeField(blank=True, help_text='Hour when the exam should be published', null=True)),
                ('duration', models.PositiveIntegerField(default=20, help_text='Duration of the exam in minutes')),
                ('for_scheduling', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=False)),
                ('exam_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='examapp.examtype')),
                ('questions', models.ManyToManyField(related_name='exams', to='examapp.question')),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'All Exams',
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='roadsign',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='examapp.signtype'),
        ),
    ]
